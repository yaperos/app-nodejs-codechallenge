service: ${self:custom.app.name}-backend-transactions

frameworkVersion: "3"

package:
  individually: true

custom: ${file(../serverless.common.yml):custom}

params: ${file(../serverless.common.yml):custom.params}

useDotenv: true

provider:
  name: aws
  logRetentionInDays: ${param:logRetentionInDays}
  region: ${param:accountRegion}
  profile: ${self:custom.profile}
  stage: ${self:custom.stage}
  runtime: ${self:custom.runtime}
  architecture: ${param:architecture}
  versionFunctions: false
  httpApi:
    id:
      Fn::ImportValue: ${self:custom.app.name}-api-id-${self:custom.stage}
  iam:
    role:
      Fn::ImportValue: ${self:custom.app.name}-lambda-transaction-role-arn-${self:custom.stage}
  memorySize: ${param:defaultMemory}
  layers:
    - ${param:commonLayerArn}
    - { Ref: TransactionLambdaLayer }
  environment:
    ENV: ${self:custom.stage}
    APP_NAME: ${self:custom.app.name}

layers:
  transaction:
    path: layer
    name: ${self:custom.app.name}-transaction-${self:custom.stage}
    retain: false
    compatibleArchitectures:
      - ${param:architecture}

functions:
  createTransaction: ${file(./functions.yml):createTransaction}
  getTransaction: ${file(./functions.yml):getTransaction}
  updateTransaction: ${file(./functions.yml):updateTransaction}

plugins:
  - serverless-offline
  - serverless-latest-layer-version
