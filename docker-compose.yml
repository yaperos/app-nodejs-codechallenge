version: "3.7"

services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.12-2.3.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      KAFKA_LISTENERS: ${KAFKA_LISTENERS}
      KAFKA_INTER_BROKER_LISTENER_NAME: ${KAFKA_INTER_BROKER_LISTENER_NAME}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: ${KAFKA_AUTO_CREATE_TOPICS_ENABLE}
      KAFKA_DELETE_TOPIC_ENABLE: ${KAFKA_DELETE_TOPIC_ENABLE}

  kafdrop:
    image: obsidiandynamics/kafdrop:3.27.0
    environment:
      KAFKA_BROKERCONNECT: ${KAFKA_BROKERCONNECT}
      JVM_OPTS: ${JVM_OPTS}
    ports:
      - 9000:9000
    depends_on:
      - kafka

  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  redis:
    image: 'redis:latest'
    ports:
      - 6379:6379
    healthcheck:
      test: redis-cli ping
      interval: 3s
      timeout: 5s
      retries: 5

  ms-modify-transactions:
    build: ./ms-modify-transactions
    ports:
      - 3000:3000
    restart: always
    environment:
      DATABASE_URL: ${DATABASE_URL}
      KAFKA_BROKERCONNECT: ${KAFKA_BROKERCONNECT}
      KAFKA_CLIENT_ID: ${KAFKA_CLIENT_ID_MODIFY}
      KAFKA_CONSUMER_ID: ${KAFKA_CONSUMER_ID_MODIFY}
      SECRET: ${SECRET}
      NODE_PORT: ${NODE_PORT_MODIFY}
    depends_on:
      - kafka
      - postgres
      
  ms-retrieve-transactions:
    build: ./ms-retrieve-transactions
    ports:
      - 3001:3000
    environment:
      DATABASE_URL: ${DATABASE_URL}
      KAFKA_CLIENT_ID: ${KAFKA_CLIENT_ID_RETRIEVE}
      KAFKA_CONSUMER_ID: ${KAFKA_CONSUMER_ID_RETRIEVE}
      KAFKA_BROKERCONNECT: ${KAFKA_BROKERCONNECT}
      SECRET: ${SECRET}
      NODE_PORT: ${NODE_PORT_RETRIEVE}
    restart: always
    depends_on:
      - kafka
      - postgres
      - redis

  ms-validate-transactions:
    build: ./ms-validate-transactions
    restart: always
    depends_on:
      - kafka  
    environment:
      KAFKA_BROKERCONNECT: ${KAFKA_BROKERCONNECT}
      KAFKA_CLIENT_ID: ${KAFKA_CLIENT_ID_VALIDATE}
      KAFKA_CONSUMER_ID: ${KAFKA_CONSUMER_ID_VALIDATE}
      SECRET: ${SECRET}
