version: '3.7'
services:
  db:
    image: postgres:14
    ports:
      - '5433:5432'
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - ./database/initdb.sql:/docker-entrypoint-initdb.d/init.sql
      - transactions-data:/var/lib/postgresql/data
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - '9092:9092'

  transactions:
    container_name: ms-transactions
    build:
      context: .
      dockerfile: ./apps/ms-transaction/Dockerfile
      target: production
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
    depends_on: [kafka, db]

  antifraud:
    container_name: antifraud
    build:
      context: .
      dockerfile: ./apps/ms-antifraud/Dockerfile
      target: production
    volumes:
      - .:/usr/src/app
    depends_on: [kafka, db]

volumes:
    transactions-data:
